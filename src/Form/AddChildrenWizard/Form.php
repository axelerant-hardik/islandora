<?php

namespace Drupal\islandora\Form\AddChildrenWizard;

use Drupal\Core\Access\AccessResult;
use Drupal\Core\DependencyInjection\ClassResolverInterface;
use Drupal\Core\Form\FormBuilderInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\RendererInterface;
use Drupal\Core\Routing\RouteMatch;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountProxyInterface;
use Drupal\Core\TempStore\SharedTempStoreFactory;
use Drupal\ctools\Wizard\FormWizardBase;
use Drupal\islandora\IslandoraUtils;
use Symfony\Component\EventDispatcher\EventDispatcherInterface;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\RequestStack;

class Form extends FormWizardBase {

  protected IslandoraUtils $utils;
  protected string $nodeId;
  protected RouteMatchInterface $currentRoute;
  protected AccountProxyInterface $currentUser;

  /**
   * Constructor.
   */
  public function __construct(
    SharedTempStoreFactory $tempstore,
    FormBuilderInterface $builder,
    ClassResolverInterface $class_resolver,
    EventDispatcherInterface $event_dispatcher,
    RouteMatchInterface $route_match,
    $tempstore_id,
    IslandoraUtils $utils,
    RouteMatchInterface $current_route_match,
    AccountProxyInterface $current_user,
    $machine_name = NULL,
    $step = NULL
  ) {
    parent::__construct($tempstore, $builder, $class_resolver, $event_dispatcher, $route_match, $tempstore_id,
      $machine_name, $step);

    $this->utils = $utils;
    $this->currentRoute = $current_route_match;
    $this->nodeId = $this->currentRoute->getParameter('node');
    $this->currentUser = $current_user;
  }

  /**
   * {@inheritdoc}
   */
  public static function getParameters() : array {
    return array_merge(
      parent::getParameters(),
      [
        'utils' => \Drupal::service('islandora.utils'),
        'tempstore_id' => 'islandora.upload_children',
        //'machine_name' => 'islandora_add_children_wizard',
        'current_route_match' => \Drupal::service('current_route_match'),
        'current_user' => \Drupal::service('current_user'),
      ]
    );
  }

  /**
   * {@inheritdoc}
   */
  public function getMachineName() {
    return strtr("islandora_add_children_wizard__{userid}__{nodeid}", [
      '{userid}' => $this->currentUser->id(),
      '{nodeid}' => $this->nodeId,
    ]);
  }

  /**
   * {@inheritdoc}
   */
  public function getOperations($cached_values) {
    return [
      'child_type' => [
        'title' => $this->t('Type of children'),
        'form' => TypeSelectionForm::class,
        'values' => [
          'node' => $this->nodeId,
        ]
      ],
      'child_files' => [
        'title' => $this->t('Files for children'),
        'form' => FileSelectionForm::class,
        'values' => [
          'node' => $this->nodeId,
        ]
      ]
    ];
  }

  public function getNextParameters($cached_values) {
    return parent::getNextParameters($cached_values) + ['node' => $this->nodeId];
  }

  public function getPreviousParameters($cached_values) {
    return parent::getPreviousParameters($cached_values) + ['node' => $this->nodeId];
  }

  public function finish(array &$form, FormStateInterface $form_state) {
    parent::finish($form, $form_state); // TODO: Change the autogenerated stub
    dsm($form_state->getTemporaryValue('wizard'));
  }

}
